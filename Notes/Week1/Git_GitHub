##Intro to Git
Version Control Tool

GitHub
A cloud service that stores your revious versions and current version of working projects.

Git
The tool to interact with GitHub and perform version control

Terminology:
'Branch' 
- A branch off the main 'trunk' that will not commit changes to the main.
'Merge' 
- Combining the codes from different branches or different versions into the main working program.
'Conflict' 
- A conflict arises when two commits are made that cannot coexist.
- You must perform a 'resolve conflict' by selecting which commits to keep and which to discard.

Git commands:
-git init:      creates a local GitHub repository.
-git clone:     clones a repository from the cloud.
-git status:    shows all uncommitted changes.
-git branch:    create, delete, or list branches
-git checkout:  change from current branch to another branch.
-git fetch:     grab the current version of the repository on GitHub.
-git merge:     merge a branch into an active one.
-git diff:      show all conflicts between branches.
-git pull:      grabs the respository from GitHub and merges it with your local repo. (fetch + merge)
-git stash:     Stashes away any changes that are not ready to be committed.
-git add:       puts the files and changes made into the repository.
-git commit:    saves the additions and changes made into the local.
-git push:      copies the local repository into the cloud repo on GitHub.com.

When you do git commit -m: create a commit message
-It is a good habit to write a commit message at all times so that yourself and other group members can keep track of changes in the project more conveniently
